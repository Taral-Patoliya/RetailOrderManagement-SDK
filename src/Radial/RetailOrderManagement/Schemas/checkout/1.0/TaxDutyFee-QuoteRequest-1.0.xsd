<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://api.gsicommerce.com/schema/checkout/1.0" 
            targetNamespace="http://api.gsicommerce.com/schema/checkout/1.0"
            elementFormDefault="qualified" 
            attributeFormDefault="unqualified"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
            version="${project.version}">

    <xsd:include schemaLocation="TaxDutyFee-Datatypes-1.0.xsd" />

    <xsd:complexType name="PromotionalDiscounts2">
        <xsd:sequence>
            <xsd:element name="Discount" type="Discount2" nillable="false" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Discount2">
        <xsd:sequence>
            <xsd:element name="Amount" type="AmountBaseType"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="ReferenceId" use="optional"/>
        <xsd:attribute name="calculateDuty" type="xsd:boolean" use="optional">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    This type represents whether duty needs to be calculated for particular discount.
                    It will be ignored for all other line items except 'Merchandise' and 'Shipping', (Cost Including Freight calculation only).
                    If overall duty is not present in input, then this flag will be ignored and duty will be calculated for all available discounts.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="FeeListRequest2">
        <xsd:sequence>
            <xsd:element name="Fee" type="FeeRequest2" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="FeeRequest2">
        <xsd:sequence>
            <xsd:element name="FeeType" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Example: geographicalSurcharge, importSurcharge</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="Description" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Example: CA Recycling Fee $18.00</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="FeeId" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Identifier for the fee. ItemId  will be used for any legal fees offered in the output.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="Charge" type="PriceGroup2"/>
            <xsd:any processContents="skip" namespace="##any" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        This xsd:any element indicates that future optional elements may show up in this location of the XML document in the
                        responses returned from the service.
                        The purpose of this xsd:any element is to define a more robust service interface that allows for new, optional elements to be added
                        to the service's responses without the service clients' code throwing exceptions.
                        The client code for this service call should be written to not break if new optional XML elements show up in this part
                        of the service response.  Modern XML marshalling frameworks often process xsd:any elements properly out-of-the-box
                        (for example, in Java, JAXB and JibX XML marshalling frameworks both honor xsd:any elements and don't throw exceptions
                        if new optional elements appear within the xsd:any section of the XML document).
                        Developers' unit tests of their service client code should include a test case where this reply message
                        contains one or more new elements in this location of the XML document.
                        If new optional elements are added to this interface, a new schema will be created, communications will be sent out,
                        and you will have the option to modify your service client code to process and use the new elements.
                        If there is no need/desire to process the new optional elements, your service client should continue to run
                        uninterrupted as long as it is built to honor this xsd:any element.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:any>
        </xsd:sequence>
        <xsd:attribute name="sessionId" type="RequestId" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="PriceGroup2">
        <xsd:sequence>
            <xsd:element name="Amount" type="AmountBaseType" nillable="true">
                <xsd:annotation>
                    <xsd:documentation>
                        This type represents Amount for Tax calculation purposes.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="TaxClass" type="String40" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        This type represents class for Tax calculation purposes. Typically the default tax class for shipping is 93000.
                        For fees default tax class will be used as 89999.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="PromotionalDiscounts" type="PromotionalDiscounts2" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="CustomFeature2">
        <xsd:sequence>
            <xsd:element name="CustomizationId" type="ReferenceId" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Optional value used to group customization instructions into logical sets.
                        Examples may be: "Stone2", "Left Shoulder"
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="ItemId" type="ItemId" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Optional item identifier (SKU) used to identify an inventory item.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="ItemDesc" type="ItemDescription" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Optional item description (SKU) used to identify an inventory item.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="Upcharge" type="MerchandisePriceGroup2" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Optional charge associated to the given Customization.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="ReferenceId" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="CustomFeatureList2">
        <xsd:sequence>
            <xsd:element name="CustomFeature" type="CustomFeature2" maxOccurs="unbounded">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="CustomizationService2">
        <xsd:sequence>
            <xsd:element name="CustomFeatureList" type="CustomFeatureList2"/>
            <xsd:element name="BasePrice" type="MerchandisePriceGroup2" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Destination2">
        <xsd:sequence>
            <xsd:element name="DestinationTarget" type="DestinationTargetType"/>
            <xsd:element name="Items" type="OrderItemList2" nillable="false"/>
            <xsd:element name="DestinationLevelGifting" type="GiftPackaging2" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DestinationList2">
        <xsd:sequence>
            <xsd:element name="Destination" type="Destination2" nillable="false"
                        maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DutyPriceGroup2">
        <xsd:complexContent>
            <xsd:extension base="PriceGroup2">
                <xsd:sequence>
                    <xsd:element name="CalculationError" type="CalculationError" minOccurs="0"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="GiftPackaging2">
        <xsd:complexContent>
            <xsd:extension base="GiftPackagingBase">
                <xsd:sequence>
                    <xsd:element name="Pricing" type="MerchandisePriceGroup2"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MerchandisePriceGroup2">
        <xsd:complexContent>
            <xsd:extension base="PriceGroup2">
                <xsd:sequence>
                    <xsd:element name="UnitPrice" type="AmountBaseType">
		                 <xsd:annotation>
		                    <xsd:documentation>
		                       This type represents Unit Price Amount for particular line item.
		                    </xsd:documentation>
		                 </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="OrderItem2">
        <xsd:sequence>
            <xsd:element name="ItemId" type="ItemId"/>
            <xsd:element name="ItemDesc" type="ItemDescription" minOccurs="0"/>
            <xsd:element name="HTSCode" type="HTSCode" minOccurs="0"/>
            <xsd:element name="ScreenSize" type="ScreenSize" minOccurs="0"/>
            <xsd:element name="Origins" type="Origins"/>
            <xsd:element name="Quantity" type="xsd:int"/>
            <xsd:element name="Pricing" type="OrderItemPricing2"/>
            <xsd:element name="Gifting" type="GiftPackaging2" minOccurs="0"/>
            <xsd:element name="Customization" type="CustomizationService2" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="lineNumber" type="LineNumber" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="OrderItemList2">
        <xsd:sequence>
            <xsd:element name="OrderItem" type="OrderItem2" nillable="false" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OrderItemPricing2">
        <xsd:sequence>
            <xsd:element name="Merchandise" type="MerchandisePriceGroup2"/>
            <xsd:element name="Shipping" type="PriceGroup2" minOccurs="0"/>
            <xsd:element name="Duty" type="DutyPriceGroup2" minOccurs="0"/>
            <xsd:element name="Fees" type="FeeListRequest2" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>



    <xsd:complexType name="ShipGroupType2" >
        <xsd:sequence>
            <xsd:element name="DestinationTarget" type="DestinationTargetType"/>
            <xsd:element name="Items" type="OrderItemList2" nillable="false"/>
            <xsd:element name="Gifting" type="GiftPackaging2" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The id field is used to uniquely identify the shipgroup within an XML document
                    to allow XML references.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="chargeType" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    The type of shipping charge. i.e. - FLAT, WEIGHT
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="TdfShippingRequestType">
        <xsd:sequence>
            <xsd:element name="ShipGroups" nillable="false">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ShipGroup" type="ShipGroupType2" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="Destinations" type="TdfDestinationsType" nillable="false" maxOccurs="1" minOccurs="1">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TaxDutyQuoteRequest">
        <xsd:sequence>
            <xsd:element name="Currency" type="ISOCurrencyCodeType"/>
            <xsd:element name="VATInclusivePricing" type="xsd:boolean" minOccurs="0"/>
            <xsd:element name="CustomerTaxId" type="CustomerTaxId" minOccurs="0"/>
            <xsd:element name="BillingInformation" type="DestinationTargetType"/>
            <xsd:element name="Shipping" type="TdfShippingRequestType"/>
        </xsd:sequence>
        <xsd:attribute name="sessionId" type="RequestId" use="optional"/>
    </xsd:complexType>

    <xsd:element name="TaxDutyQuoteRequest" type="TaxDutyQuoteRequest" nillable="false"/>

</xsd:schema>
