<?php
/**
 * Copyright (c) 2013-2014 eBay Enterprise, Inc.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @copyright   Copyright (c) 2013-2015 eBay Enterprise, Inc. (http://www.ebayenterprise.com/)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Radial\RetailOrderManagement\Payload\Order\Detail;

use Radial\RetailOrderManagement\Payload\IPayload;
use DateTime;

interface IShipment extends IShippedItemContainer, IPayload
{
    const XML_NS = 'http://api.gsicommerce.com/schema/checkout/1.0';
    const ROOT_NODE = 'Shipment';

    /**
     * Unique string within the context of the Order. Generated by the OMS.
     * Allowable Values: Text string
     * Required: Yes
     * Length: TBD
     * Default Value: Blank
     *
     * @return string
     */
    public function getId();

    /**
     * @param  string
     * @return self
     */
    public function setId($id);

    /**
     * Links a shipment to the destination address
     *
     * @return string
     */
    public function getDestinationRef();

    /**
     * @param  string
     * @return self
     */
    public function setDestinationRef($destinationRef);

    /**
     * The name of the originating warehouse. Populated by the Sterling Node.
     * Allowable Values: Text string
     * Required: Yes
     * Length: TBD
     * Default Value: Blank
     *
     * @return string
     */
    public function getWarehouse();

    /**
     * @param  string
     * @return self
     */
    public function setWarehouse($warehouse);

    /**
     * Populated on response from OMS. Represents the logical Carriers (SCAC) and modes (CarrierServiceCode).
     * simple type to validate string elements are not empty and are at most 40 characters long.
     *
     * @return string
     */
    public function getCarrier();

    /**
     * @param  string
     * @return self
     */
    public function setCarrier($carrier);

    /**
     * @return string
     */
    public function getMode();

    /**
     * @param  string
     * @return self
     */
    public function setMode($mode);

    /**
     * @return string
     */
    public function getDisplayText();

    /**
     * @param  string
     * @return self
     */
    public function setDisplayText($displayText);

    /**
     * The amount and unit of the shipment's weight.
     * Allowable Values: Text string
     * Required: Yes
     * Length: TBD
     * Default Value: Blank
     *
     * @return string
     */
    public function getTotalWeight();

    /**
     * @param  string
     * @return self
     */
    public function setTotalWeight($totalWeight);

    /**
     * Date the shipment left the warehouse.
     * Allowable Values: Date and time as defined by dateTime
     * Required: No
     * Length: TBD
     * Default Value: Blank
     *
     * @return DateTime
     */
    public function getShippedDate();

    /**
     * @param  DateTime
     * @return self
     */
    public function setShippedDate(DateTime $shippedDate);
}
